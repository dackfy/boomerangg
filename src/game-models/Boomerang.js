// –ë—É–º–µ—Ä–∞–Ω–≥ —è–≤–ª—è–µ—Ç—Å—è –æ—Ä—É–∂–∏–µ–º.
// –í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –æ—Ä—É–∂–∏–µ.
// –¢–æ–≥–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Weapon –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º!
const player = require('play-sound')((opts = {}));

class Boomerang {
  constructor(trackLength) {
    const skin = ['üí´', 'üí£', 'ü§ú', 'ü¶†', 'üï∏', 'üçå', 'üç≥', 'üî™'];
    this.skin = skin[Math.floor(Math.random() * skin.length)];
    this.position = -1;
    this.trackLength = trackLength;
  }

  playBooerangSound() {
    const newLocal = './src/sounds/Boomerang.m4a';
    player.play(newLocal, function (err) {
      if (err) throw err;
    });
  }

  fly() {
    const distance = 5; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –ø–æ–ª–µ—Ç–∞ –±—É–º–µ—Ä–∞–Ω–≥–∞
    this.playBooerangSound();
    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—É–º–µ—Ä–∞–Ω–≥ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
    for (let i = 1; i <= distance; i++) {
      setTimeout(() => this.moveRight(1), 100 * i);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±—É–º–µ—Ä–∞–Ω–≥ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
    for (let i = 1; i <= distance; i++) {
      setTimeout(() => this.moveLeft(1), 100 * (distance + i));
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –±—É–º–µ—Ä–∞–Ω–≥–∞ –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è
    setTimeout(() => this.reset(), 100 * (distance * 2));
  }

  reset() {
    this.position = -1; // –°–±—Ä–æ—Å –ø–æ–∑–∏—Ü–∏–∏ –±—É–º–µ—Ä–∞–Ω–≥–∞
  }

  moveLeft(distance) {
    // –ò–¥—ë–º –≤–ª–µ–≤–æ.
    this.position -= distance;
  }

  moveRight(distance) {
    // –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ.
    this.position += distance;
  }
}

module.exports = Boomerang;
